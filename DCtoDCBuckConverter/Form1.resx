<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="serialPort1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 13</value>
  </metadata>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>145, 13</value>
  </metadata>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>246, 13</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>49</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        uVFmuIrBsrruS4ofAUQGw/kNl5Cn25OAyCbH53GH+7ihvvlTXACiNV/SW7cXKUUpo2SDNxmkdkfQE7b5
        o2ILZzceMZTC1wBiICuU699ZVFQznYebzm9I5VPApbb5PVPERKlcQS2VBbBJtwMpQSlvMVMudYpOZQH8
        r24HkhxJEa/wtvu0tlS+BmjLt3G9fiFdKWMlS1nK0gZrATmQwgIA0Zf5dNPtRVJQwy628D3LWcoaWeV9
        w5QWAIhevE8/3V4klCoqqKCcvWxlK1tqf7bFusZBigsAQBTQT8/bAQNH1jZ3WAjvxfODNBCAJR5SuyfQ
        EjdWAIZjBWA4VgCGYwVgOFYAhmMFYDhWAIZjBWA4VgCGYwVgOFYAhmMFYDhWAIZjBWA4VgCGYwVgOFYA
        hmMFYDhWAIZjBWA4VgCGYwVgOFYAhmMFYDhWAIZjBWA4VgCGYwVgOFYAhmMFYDhWAIZjBWA4VgCGYwVg
        OFYAhmMFYDhWAIZjBWA4VgCGYwVgOFYAhmMFYDhWAIZjBWA4VgCGYwVgOFYAhmMFYDhWAIZjBWA4VgCG
        YwVgOFYAhmMFYDj/D8J3ECk2OMpOAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDEzLTExLTE5VDIwOjQwOjQ1
        LTA2OjAw366mvwAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxMy0xMS0xOVQyMDo0MDo0NS0wNjowMK7zHgMA
        AAAASUVORK5CYII=
</value>
  </data>
</root>